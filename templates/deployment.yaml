apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: hawtio
parameters:
- name: APPLICATION_NAME
  displayName: Application Name
  required: true
  value: hawtio
- name: IMAGE
  displayName: Application Image
  required: true
  description: The name assigned to the Hawtio resources
- name: DEPLOYMENT_TYPE
  displayName: Deployment Type
  required: true
  description: The deployment type, either "cluster" or "namespace"
- name: OAUTH_CLIENT
  displayName: OAuth Client Name
  required: true
  description: The OAuth client name
- name: REPLICAS
  required: true
  description: The number of desired replicas
- name: ROUTE_HOSTNAME
  description: The externally-reachable host name that routes to the Hawtio service
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${APPLICATION_NAME}
  data:
    hawtconfig.json: |
      {
        "about": {
          "title": "Hawtio Console",
          "productInfo": [],
          "additionalInfo": "The Hawtio console eases the discovery and management of 'hawtio-enabled' applications deployed on OpenShift.",
          "copyright": ""
        },
        "branding": {
          "appName": "Hawtio Console",
          "appLogoUrl": "img/hawtio-logo.svg",
          "consoleLink": {
            "text": "Hawtio Console",
            "section": "Hawtio",
            "imageRelativePath": "/online/img/favicon.ico"
          }
        },
        "disabledRoutes": []
      }
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: hawtio
    name: ${APPLICATION_NAME}
  spec:
    replicas: ${{REPLICAS}}
    selector:
      matchLabels:
        app: hawtio
        deployment: ${APPLICATION_NAME}
    template:
      metadata:
        labels:
          app: hawtio
          deployment: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ${IMAGE}
          imagePullPolicy: Always
          name: hawtio-online
          ports:
          - name: nginx
            containerPort: 8443
          livenessProbe:
            httpGet:
              path: /online
              port: nginx
              scheme: HTTPS
            periodSeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /online
              port: nginx
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
          env:
          - name: HAWTIO_ONLINE_MODE
            value: ${DEPLOYMENT_TYPE}
          - name: HAWTIO_ONLINE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: HAWTIO_OAUTH_CLIENT_ID
            value: ${OAUTH_CLIENT}
          resources:
            requests:
              cpu: 0.2
              memory: 32Mi
            limits:
              cpu: 1.0
              memory: 32Mi
          volumeMounts:
          - name: hawtio-online
            mountPath: /usr/share/nginx/html/online/hawtconfig.json
            subPath: hawtconfig.json
          - name: hawtio-integration
            mountPath: /usr/share/nginx/html/integration/hawtconfig.json
            subPath: hawtconfig.json
        volumes:
        - name: hawtio-online
          configMap:
            name: ${APPLICATION_NAME}
        - name: hawtio-integration
          configMap:
            name: ${APPLICATION_NAME}
        - name: hawtio-online-tls-serving
          secret:
            secretName: ${APPLICATION_NAME}-tls-serving
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: hawtio
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: ${APPLICATION_NAME}-tls-serving
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 443
      protocol: TCP
      targetPort: nginx
    selector:
      app: hawtio
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: hawtio
    name: ${APPLICATION_NAME}
  spec:
    host: ${ROUTE_HOSTNAME}
    to:
      kind: Service
      name: ${APPLICATION_NAME}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
